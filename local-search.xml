<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>编程杂记</title>
    <link href="/2023/09/06/%E7%BC%96%E7%A8%8B%E6%9D%82%E8%AE%B0/"/>
    <url>/2023/09/06/%E7%BC%96%E7%A8%8B%E6%9D%82%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="Unix-timestamp"><a href="#Unix-timestamp" class="headerlink" title="Unix timestamp"></a>Unix timestamp</h3><p>Unix 时间戳（Unix timestamp）是一种表示时间的方式，它是一个整数，表示自 <strong>1970 年 1 月 1 日 00:00:00</strong>（<u>UTC</u>，协调世界时）以来的秒数。Unix 时间戳通常用于计算机系统中，特别是在Unix、Linux和类似系统中，用于记录和处理时间。它是一种跨平台的时间表示方法，因为它不受时区和夏令时的影响。</p><p>Unix操作系统是由肯·汤普逊（Ken Thompson）、丹尼斯·里奇（Dennis Ritchie）等人在20世纪70年代早期开发的。当时，他们需要一种在不同计算机系统之间传递时间信息的标准方法。为了简化时间表示，并且因为1970年正好是Unix系统首次运行的时间，他们选择了这个时间点作为起始点。这个时间点被称为<strong>Unix纪元</strong>（Unix Epoch），是Unix和类Unix操作系统中广泛使用的时间表示方法的基础。</p><p>协调世界时（Coordinated Universal Time，缩写为<strong>UTC</strong>）是一种国际标准的时间计量系统，旨在提供一种统一的时间表示，不受地理位置或政治因素的影响。UTC 是世界上广泛接受的时间标准之一，用于协调全球的时间。</p><h3 id="字节序-endian"><a href="#字节序-endian" class="headerlink" title="字节序 endian"></a>字节序 endian</h3><p>计算机硬件有两种存储数据的方式，以<code>0x2211</code> 为例</p><ul><li>大端字节序（big endian）：高位字节在前，低位字节在后，符合人类直觉的方法，即<code>0x22</code> <code>0x11</code></li><li>小端字节序（little endian）：低位字节在前，高位字节在后 <code>0x11</code> <code>0x22</code></li></ul><blockquote><p>每个16进制位对应<strong>4个</strong>2进制位</p></blockquote><p>计算器先处理低位字节效率更高，通常计算机内部使用小端字节序，而网络传输、文件存储通常使用大端字节序。只有<strong>读取</strong>的时候，才必须区分字节序，其他情况都不用考虑（如<strong>写入</strong>）。</p><p>对于一个16位整数，大端字节序的处理伪代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">x = buf[offset]&lt;&lt;<span class="hljs-number">8</span> | buf[offset+<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><p>小端字节序的处理伪代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">x = buf[offset+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span> | buf[offset]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C++环境配置</title>
    <link href="/2023/08/18/C-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/08/18/C-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>开发环境：VSCode</p><p>编译：XMake</p><p>语法提示&#x2F;补全：Clangd</p><p>调试：CodeLLDB</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Chapter II 语言可用性的强化</title>
    <link href="/2023/08/17/Chapter-II-%E8%AF%AD%E8%A8%80%E5%8F%AF%E7%94%A8%E6%80%A7%E7%9A%84%E5%BC%BA%E5%8C%96/"/>
    <url>/2023/08/17/Chapter-II-%E8%AF%AD%E8%A8%80%E5%8F%AF%E7%94%A8%E6%80%A7%E7%9A%84%E5%BC%BA%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="2-1-常量"><a href="#2-1-常量" class="headerlink" title="2.1 常量"></a>2.1 常量</h2><h3 id="nullptr"><a href="#nullptr" class="headerlink" title="nullptr"></a>nullptr</h3><p>C++11引入了<code>nullptr</code>关键字，其类型为<code>nullptr_t</code>，专门用来区分「空指针 &amp; 0」。<code>nullptr</code>能够隐式转换为任何指针，也能够进行是否相等的比较。</p><h3 id="constexpr"><a href="#constexpr" class="headerlink" title="constexpr"></a>constexpr</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">constexpr</span> <span class="hljs-type">int</span> <span class="hljs-title">fibonacci</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">int</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> n == <span class="hljs-number">1</span> || n == <span class="hljs-number">2</span> ? <span class="hljs-number">1</span> : <span class="hljs-built_in">fibonacci</span>(n<span class="hljs-number">-2</span>) + <span class="hljs-built_in">fibonacci</span>(n<span class="hljs-number">-1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/08/17/test/"/>
    <url>/2023/08/17/test/</url>
    
    <content type="html"><![CDATA[<p>以后就在这里记录啦</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/17/hello-world/"/>
    <url>/2023/08/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
